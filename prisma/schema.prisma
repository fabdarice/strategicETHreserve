generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Company {
  id                   String   @id @default(cuid())
  name                 String   @unique
  category             String  
  secondaryCategory    String[]
  ticker               String?
  currentReserve       Float
  addresses            String[]
  logo                 String
  website              String?
  twitter              String?
  status               String   @default("PENDING")
  news                 String?  
  contact              String?
  accountingType       String? @default("SELF_REPORTED")
  wallets              CompanyWallet[]
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  snapshots            SnapshotCompany[]
  @@map("companies")
}

model CompanyWallet {
  id                   String   @id @default(cuid())
  companyId            String
  company              Company  @relation(fields: [companyId], references: [id])
  address              String
  balance              Float
  autoScan             Boolean @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("company_wallets")
}

model Snapshot {
  id                   String   @id @default(cuid())
  totalReserve         String
  totalCompanies       Int
  pctDiff              Float?
  snapshotDate         DateTime @default(now())
  totalReserveUSD      Float @default(0)
  currentUSDPrice      Int @default(0)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@index([snapshotDate])
  @@map("snapshots")
}

model SnapshotCompany {
  id                   String   @id @default(cuid())  
  companyId            String
  company              Company  @relation(fields: [companyId], references: [id])  
  reserve              Float
  pctDiff              Float?
  snapshotDate         DateTime @default(now())
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@index([snapshotDate])
  @@index([companyId, snapshotDate])
  @@map("snapshot_companies")
}

model Influencer {
  id          String   @id @default(cuid())
  name        String   @unique
  avatar      String?
  description String
  commitment  String
  twitter     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("influencers")
}

model Admin {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  status    String   @default("ACTIVE")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}
